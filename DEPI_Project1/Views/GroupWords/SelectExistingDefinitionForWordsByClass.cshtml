@model IEnumerable<Meaning>
@{
    ViewData["Title"] = "Select Existing Definition for Words by Class";
}

<h1>Select Existing Definition for Words by Class</h1>
<h4>Group: @ViewBag.GroupName</h4>
<h5>Word Class: <span class="badge bg-primary">@ViewBag.WordClass</span></h5>
<hr />

<div class="alert alert-info">
    <i class="bi bi-info-circle"></i>
    This definition will be added to <strong>@ViewBag.WordsWithClassCount</strong> words with class "<strong>@ViewBag.WordClass</strong>" in this group.
</div>

<!-- Search Form -->
<div class="row mb-4">
    <div class="col-md-12">
        <form method="get">
            <input type="hidden" name="groupId" value="@ViewBag.GroupId" />
            <input type="hidden" name="wordClass" value="@ViewBag.WordClass" />
            
            <!-- Search Input Row -->
            <div class="row mb-3">
                <div class="col-md-6">
                    <div class="input-group">
                        <input type="text" name="search" class="form-control" 
                               placeholder="Search definitions or words..." 
                               value="@ViewBag.SearchText">
                        <button class="btn btn-outline-secondary" type="submit">
                            <i class="bi bi-search"></i> Search
                        </button>
                    </div>
                </div>
            </div>
            
            <!-- Search Type Options Row -->
            <div class="row">
                <div class="col-md-6">
                    <label class="form-label">Definition Text Search Type:</label>
                    <select name="definitionSearchType" class="form-select">
                        @if (ViewBag.SearchType == "exact")
                        {
                            <option value="exact" selected>Exact Match</option>
                        }
                        else
                        {
                            <option value="exact">Exact Match</option>
                        }

                        @if (ViewBag.SearchType == "contain")
                        {
                            <option value="contain" selected>Contains</option>
                        }
                        else
                        {
                            <option value="contain">Contains</option>
                        }

                        @if (ViewBag.SearchType == "start")
                        {
                            <option value="start" selected>Starts With</option>
                        }
                        else
                        {
                            <option value="start">Starts With</option>
                        }

                        @if (ViewBag.SearchType == "end")
                        {
                            <option value="end" selected>Ends With</option>
                        }
                        else
                        {
                            <option value="end">Ends With</option>
                        }
                    </select>
                </div>
                <div class="col-md-6">
                    <label class="form-label">Words Search Type:</label>
                    <select name="wordSearchType" class="form-select">
                        @if (ViewBag.SearchType == "exact")
                        {
                            <option value="exact" selected>Exact Match</option>
                        }
                        else
                        {
                            <option value="exact">Exact Match</option>
                        }

                        @if (ViewBag.SearchType == "contain")
                        {
                            <option value="contain" selected>Contains</option>
                        }
                        else
                        {
                            <option value="contain">Contains</option>
                        }

                        @if (ViewBag.SearchType == "start")
                        {
                            <option value="start" selected>Starts With</option>
                        }
                        else
                        {
                            <option value="start">Starts With</option>
                        }

                        @if (ViewBag.SearchType == "end")
                        {
                            <option value="end" selected>Ends With</option>
                        }
                        else
                        {
                            <option value="end">Ends With</option>
                        }
                    </select>
                </div>
            </div>
        </form>
    </div>
</div>

<!-- Search Results Info -->
@if (!string.IsNullOrEmpty(ViewBag.SearchText))
{
    <div class="alert alert-info">
        <i class="bi bi-info-circle"></i> 
        Searching for "<strong>@ViewBag.SearchText</strong>" using:
        <br>
        <small>
            • Definition text: <strong>@ViewBag.DefinitionSearchType</strong> search
            <br>
            • Words in definitions: <strong>@ViewBag.WordSearchType</strong> search
        </small>
    </div>
}

<!-- Available Definitions -->
@if (Model != null && Model.Any())
{
    <div class="card">
        <div class="card-header">
            <h5>Available Definitions (@Model.Count())</h5>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>Definition Text</th>
                            <th>Language</th>
                            <th>Words Count</th>
                            <th>Associated Words</th>
                            <th>Status</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var meaning in Model)
                        {
                            var meaningIndex = Model.ToList().IndexOf(meaning);
                            <tr>
                                <td class="bidi-text" dir="auto">
                                    <strong>
                                        @{
                                            string displayText = meaning.MeaningText.Length > 100 
                                                ? meaning.MeaningText.Substring(0, 97) + "..." 
                                                : meaning.MeaningText;
                                        }
                                        <div title="@meaning.MeaningText">@displayText</div>
                                    </strong>
                                    @if (!string.IsNullOrEmpty(meaning.Notes) && !meaning.Notes.Contains("Already linked"))
                                    {
                                        <br><small class="text-muted">@meaning.Notes</small>
                                    }
                                </td>
                                <td>
                                    @if (!string.IsNullOrEmpty(meaning.Language))
                                    {
                                        <span class="badge bg-secondary">@meaning.Language</span>
                                    }
                                </td>
                                <td>
                                    <span class="badge bg-info">@(meaning.WordMeanings?.Count ?? 0) words</span>
                                </td>
                                <td>
                                    @if (meaning.WordMeanings != null && meaning.WordMeanings.Any())
                                    {
                                        var allWords = meaning.WordMeanings.Select(wm => wm.Word).Where(w => w != null).Take(3).ToList();
                                        <div class="preview-words">
                                            @foreach (var word in allWords)
                                            {
                                                <span class="badge bg-light text-dark">@word.Word_text (@word.Language, @word.Class)</span>
                                            }
                                            @if (meaning.WordMeanings.Count > 3)
                                            {
                                                <span class="badge bg-secondary">+@(meaning.WordMeanings.Count - 3) more</span>
                                            }
                                        </div>
                                    }
                                    else
                                    {
                                        <small class="text-muted">
                                            <i class="bi bi-dash-circle"></i> No associated words
                                        </small>
                                    }
                                </td>
                                <td>
                                    @if (meaning.Notes?.Contains("Already linked") == true)
                                    {
                                        <span class="badge bg-warning text-dark">
                                            <i class="bi bi-exclamation-triangle"></i> Partially linked
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-success">Available</span>
                                    }
                                </td>
                                <td>
                                    <form asp-action="AddExistingDefinitionToWordsByClass" method="post" style="display:inline;">
                                        @Html.AntiForgeryToken()
                                        <input type="hidden" name="meaningId" value="@meaning.ID" />
                                        <input type="hidden" name="groupId" value="@ViewBag.GroupId" />
                                        <input type="hidden" name="wordClass" value="@ViewBag.WordClass" />
                                        <button type="submit" class="btn btn-success btn-sm"
                                                onclick="return confirm('Add this definition to all @ViewBag.WordClass words in the group?');"
                                                @(meaning.Notes?.Contains("Already linked") == true ? "title='Some words already have this meaning'" : "")>
                                            <i class="bi bi-plus-circle"></i> Add to @ViewBag.WordClass Words
                                        </button>
                                    </form>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
}
else
{
    <div class="alert alert-info">
        <i class="bi bi-info-circle"></i> 
        @if (string.IsNullOrEmpty(ViewBag.SearchText as string))
        {
            <text>Please enter a search term to find definitions.</text>
        }
        else
        {
            <text>No definitions found matching your search criteria "@ViewBag.SearchText".</text>
        }
    </div>
}

<div class="mt-3">
    <a asp-action="Details" asp-route-id="@ViewBag.GroupId" class="btn btn-secondary">
        <i class="bi bi-arrow-left"></i> Back to Group Details
    </a>
</div>

<style>
    .bidi-text {
        unicode-bidi: embed;
        text-align: start;
        white-space: pre-wrap;
        word-wrap: break-word;
    }
    
    .preview-words .badge {
        font-size: 0.75em;
        margin-right: 0.25rem;
        margin-bottom: 0.25rem;
    }
</style>